// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: o7C61dL2AAD7uCRtgHRJ1p
// Component: xGg6X7hlsmRZ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: o7C61dL2AAD7uCRtgHRJ1p/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: xGg6X7hlsmRZ/css

import _01AlignCenter14Icon from "./icons/PlasmicIcon___01AlignCenter14"; // plasmic-import: xaptTa_gnyfI/icon
import _01AlignCenter15Icon from "./icons/PlasmicIcon___01AlignCenter15"; // plasmic-import: y_KmuzDKjmUe/icon
import _01AlignCenter16Icon from "./icons/PlasmicIcon___01AlignCenter16"; // plasmic-import: iCgXMj8oTQRd/icon

createPlasmicElementProxy;

export type PlasmicFooter__VariantMembers = {};
export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  root?: Flex__<"div">;
  content?: Flex__<"div">;
  content2?: Flex__<"div">;
  image2?: Flex__<"div">;
  verwandelnSieIhrZuhauseInEineWohlfuhloase?: Flex__<"div">;
  email?: Flex__<"div">;
  inputEmail?: Flex__<"div">;
  buttonNoIcon?: Flex__<"div">;
  button?: Flex__<"div">;
  content4?: Flex__<"div">;
  content5?: Flex__<"div">;
  frame8120?: Flex__<"div">;
  content6?: Flex__<"div">;
  content7?: Flex__<"div">;
  content8?: Flex__<"div">;
  content9?: Flex__<"div">;
  content10?: Flex__<"div">;
  content11?: Flex__<"div">;
  frame9664?: Flex__<"div">;
  locations?: Flex__<"div">;
  marker?: Flex__<"div">;
  phoneNumner?: Flex__<"div">;
  email2?: Flex__<"div">;
  mail?: Flex__<"div">;
  text?: Flex__<"div">;
  content12?: Flex__<"div">;
  content13?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  time?: Flex__<"div">;
  icon7?: Flex__<"div">;
  paymentCard?: Flex__<"div">;
  content3?: Flex__<"div">;
  _2024EwlInstallationstechnikGmbH?: Flex__<"div">;
};

export interface DefaultFooterProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <Stack__
        as={"div"}
        data-plasmic-name={"content"}
        data-plasmic-override={overrides.content}
        hasGap={true}
        className={classNames(projectcss.all, sty.content)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"content2"}
          data-plasmic-override={overrides.content2}
          hasGap={true}
          className={classNames(projectcss.all, sty.content2)}
        >
          <div
            data-plasmic-name={"image2"}
            data-plasmic-override={overrides.image2}
            className={classNames(projectcss.all, sty.image2)}
          />

          <div
            data-plasmic-name={"verwandelnSieIhrZuhauseInEineWohlfuhloase"}
            data-plasmic-override={
              overrides.verwandelnSieIhrZuhauseInEineWohlfuhloase
            }
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.verwandelnSieIhrZuhauseInEineWohlfuhloase
            )}
          >
            {
              "Machen Sie Ihr Zuhause smarter und komfortabler mit Produkte von EWL"
            }
          </div>
          <div
            data-plasmic-name={"email"}
            data-plasmic-override={overrides.email}
            className={classNames(projectcss.all, sty.email)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"inputEmail"}
              data-plasmic-override={overrides.inputEmail}
              hasGap={true}
              className={classNames(projectcss.all, sty.inputEmail)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jgYx
                )}
              >
                {"Deine E-Mail"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"buttonNoIcon"}
              data-plasmic-override={overrides.buttonNoIcon}
              hasGap={true}
              className={classNames(projectcss.all, sty.buttonNoIcon)}
            >
              <div
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.button
                )}
              >
                {"ABsenden"}
              </div>
            </Stack__>
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"content4"}
          data-plasmic-override={overrides.content4}
          hasGap={true}
          className={classNames(projectcss.all, sty.content4)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__odz5J
            )}
          >
            {"Kundenservice"}
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"content5"}
            data-plasmic-override={overrides.content5}
            hasGap={true}
            className={classNames(projectcss.all, sty.content5)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___7EAw7
              )}
            >
              {"Mein Konto"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6T6YD
              )}
            >
              {"Zahlungen"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0ZMgn
              )}
            >
              {"Lieferungen und R\u00fccksendungen"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vozWg
              )}
            >
              {"R\u00fcckerstattung und R\u00fcckgabe"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tplMj
              )}
            >
              {"H\u00e4ufig gestellte Fragen"}
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"frame8120"}
          data-plasmic-override={overrides.frame8120}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame8120)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"content6"}
            data-plasmic-override={overrides.content6}
            hasGap={true}
            className={classNames(projectcss.all, sty.content6)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jYqYr
              )}
            >
              {"\u00dcber uns"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"content7"}
              data-plasmic-override={overrides.content7}
              hasGap={true}
              className={classNames(projectcss.all, sty.content7)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8Jpxq
                )}
              >
                {"Unsere Geschichte"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vgcTl
                )}
              >
                {"Jobm\u00f6glichkeiten"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nBx44
                )}
              >
                {"Blog"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dGlnH
                )}
              >
                {"Bewertungen"}
              </div>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"content8"}
            data-plasmic-override={overrides.content8}
            hasGap={true}
            className={classNames(projectcss.all, sty.content8)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wif47
              )}
            >
              {"Rechtliches"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"content9"}
              data-plasmic-override={overrides.content9}
              hasGap={true}
              className={classNames(projectcss.all, sty.content9)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__by51F
                )}
              >
                {"Impressum"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bXoAh
                )}
              >
                {"Datenschutzerkl\u00e4rung"}
              </div>
            </Stack__>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"content10"}
          data-plasmic-override={overrides.content10}
          hasGap={true}
          className={classNames(projectcss.all, sty.content10)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"content11"}
            data-plasmic-override={overrides.content11}
            hasGap={true}
            className={classNames(projectcss.all, sty.content11)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oz4Gi
              )}
            >
              {"Kontakt"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame9664"}
              data-plasmic-override={overrides.frame9664}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame9664)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"locations"}
                data-plasmic-override={overrides.locations}
                hasGap={true}
                className={classNames(projectcss.all, sty.locations)}
              >
                <div
                  data-plasmic-name={"marker"}
                  data-plasmic-override={overrides.marker}
                  className={classNames(projectcss.all, sty.marker)}
                >
                  <_01AlignCenter14Icon
                    className={classNames(projectcss.all, sty.svg___4Xu0X)}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hJxwJ
                  )}
                >
                  {"Radlpa\u00dfstra\u00dfe 19, 8551 Wies"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"phoneNumner"}
                data-plasmic-override={overrides.phoneNumner}
                hasGap={true}
                className={classNames(projectcss.all, sty.phoneNumner)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8Dk0)}
                  displayHeight={"16px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"16px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/ewl/images/phoneCall.svg",
                    fullWidth: 16,
                    fullHeight: 16,
                    aspectRatio: 1
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__t165
                  )}
                >
                  {"+43 3465 50705"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"email2"}
                data-plasmic-override={overrides.email2}
                hasGap={true}
                className={classNames(projectcss.all, sty.email2)}
              >
                <div
                  data-plasmic-name={"mail"}
                  data-plasmic-override={overrides.mail}
                  className={classNames(projectcss.all, sty.mail)}
                >
                  <_01AlignCenter15Icon
                    className={classNames(projectcss.all, sty.svg__phYrN)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(projectcss.all, sty.text)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6JS23
                    )}
                  >
                    {"ewl@gmail.com"}
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          {false ? (
            <Stack__
              as={"div"}
              data-plasmic-name={"content12"}
              data-plasmic-override={overrides.content12}
              hasGap={true}
              className={classNames(projectcss.all, sty.content12)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__msOk6
                )}
              >
                {"\u00d6ffnungszeiten"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"content13"}
                data-plasmic-override={overrides.content13}
                hasGap={true}
                className={classNames(projectcss.all, sty.content13)}
              >
                <div
                  data-plasmic-name={"freeBox"}
                  data-plasmic-override={overrides.freeBox}
                  className={classNames(projectcss.all, sty.freeBox)}
                >
                  <div
                    data-plasmic-name={"time"}
                    data-plasmic-override={overrides.time}
                    className={classNames(projectcss.all, sty.time)}
                  >
                    <_01AlignCenter16Icon
                      className={classNames(projectcss.all, sty.svg__dvhf4)}
                      role={"img"}
                    />
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rtccQ
                  )}
                >
                  {"24-hour (Monday - Sunday)"}
                </div>
              </Stack__>
            </Stack__>
          ) : null}
          <Stack__
            as={"div"}
            data-plasmic-name={"icon7"}
            data-plasmic-override={overrides.icon7}
            hasGap={true}
            className={classNames(projectcss.all, sty.icon7)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__pUsHj)}
              displayHeight={"21.96px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"35px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/ewl/images/paymentCard.svg",
                fullWidth: 35,
                fullHeight: 21.96,
                aspectRatio: 1.590909
              }}
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__kKuCc)}
              displayHeight={"21.96px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"35px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/ewl/images/paymentCard2.svg",
                fullWidth: 35,
                fullHeight: 21.96,
                aspectRatio: 1.590909
              }}
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__aalXi)}
              displayHeight={"21.96px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"35px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/ewl/images/paymentCard3.svg",
                fullWidth: 35,
                fullHeight: 21.96,
                aspectRatio: 1.590909
              }}
            />

            <div
              data-plasmic-name={"paymentCard"}
              data-plasmic-override={overrides.paymentCard}
              className={classNames(projectcss.all, sty.paymentCard)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___6HlHg)}
                displayHeight={"21.96px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"35px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/ewl/images/group2.svg",
                  fullWidth: 35,
                  fullHeight: 21.96,
                  aspectRatio: 1.590909
                }}
              />
            </div>
          </Stack__>
        </Stack__>
      </Stack__>
      <div
        data-plasmic-name={"content3"}
        data-plasmic-override={overrides.content3}
        className={classNames(projectcss.all, sty.content3)}
      >
        <div
          data-plasmic-name={"_2024EwlInstallationstechnikGmbH"}
          data-plasmic-override={overrides._2024EwlInstallationstechnikGmbH}
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty._2024EwlInstallationstechnikGmbH
          )}
        >
          {"\u00a9 2024, EWL Installationstechnik GmbH "}
        </div>
      </div>
    </Stack__>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "content",
    "content2",
    "image2",
    "verwandelnSieIhrZuhauseInEineWohlfuhloase",
    "email",
    "inputEmail",
    "buttonNoIcon",
    "button",
    "content4",
    "content5",
    "frame8120",
    "content6",
    "content7",
    "content8",
    "content9",
    "content10",
    "content11",
    "frame9664",
    "locations",
    "marker",
    "phoneNumner",
    "email2",
    "mail",
    "text",
    "content12",
    "content13",
    "freeBox",
    "time",
    "icon7",
    "paymentCard",
    "content3",
    "_2024EwlInstallationstechnikGmbH"
  ],
  content: [
    "content",
    "content2",
    "image2",
    "verwandelnSieIhrZuhauseInEineWohlfuhloase",
    "email",
    "inputEmail",
    "buttonNoIcon",
    "button",
    "content4",
    "content5",
    "frame8120",
    "content6",
    "content7",
    "content8",
    "content9",
    "content10",
    "content11",
    "frame9664",
    "locations",
    "marker",
    "phoneNumner",
    "email2",
    "mail",
    "text",
    "content12",
    "content13",
    "freeBox",
    "time",
    "icon7",
    "paymentCard"
  ],
  content2: [
    "content2",
    "image2",
    "verwandelnSieIhrZuhauseInEineWohlfuhloase",
    "email",
    "inputEmail",
    "buttonNoIcon",
    "button"
  ],
  image2: ["image2"],
  verwandelnSieIhrZuhauseInEineWohlfuhloase: [
    "verwandelnSieIhrZuhauseInEineWohlfuhloase"
  ],
  email: ["email", "inputEmail", "buttonNoIcon", "button"],
  inputEmail: ["inputEmail"],
  buttonNoIcon: ["buttonNoIcon", "button"],
  button: ["button"],
  content4: ["content4", "content5"],
  content5: ["content5"],
  frame8120: ["frame8120", "content6", "content7", "content8", "content9"],
  content6: ["content6", "content7"],
  content7: ["content7"],
  content8: ["content8", "content9"],
  content9: ["content9"],
  content10: [
    "content10",
    "content11",
    "frame9664",
    "locations",
    "marker",
    "phoneNumner",
    "email2",
    "mail",
    "text",
    "content12",
    "content13",
    "freeBox",
    "time",
    "icon7",
    "paymentCard"
  ],
  content11: [
    "content11",
    "frame9664",
    "locations",
    "marker",
    "phoneNumner",
    "email2",
    "mail",
    "text"
  ],
  frame9664: [
    "frame9664",
    "locations",
    "marker",
    "phoneNumner",
    "email2",
    "mail",
    "text"
  ],
  locations: ["locations", "marker"],
  marker: ["marker"],
  phoneNumner: ["phoneNumner"],
  email2: ["email2", "mail", "text"],
  mail: ["mail"],
  text: ["text"],
  content12: ["content12", "content13", "freeBox", "time"],
  content13: ["content13", "freeBox", "time"],
  freeBox: ["freeBox", "time"],
  time: ["time"],
  icon7: ["icon7", "paymentCard"],
  paymentCard: ["paymentCard"],
  content3: ["content3", "_2024EwlInstallationstechnikGmbH"],
  _2024EwlInstallationstechnikGmbH: ["_2024EwlInstallationstechnikGmbH"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  content: "div";
  content2: "div";
  image2: "div";
  verwandelnSieIhrZuhauseInEineWohlfuhloase: "div";
  email: "div";
  inputEmail: "div";
  buttonNoIcon: "div";
  button: "div";
  content4: "div";
  content5: "div";
  frame8120: "div";
  content6: "div";
  content7: "div";
  content8: "div";
  content9: "div";
  content10: "div";
  content11: "div";
  frame9664: "div";
  locations: "div";
  marker: "div";
  phoneNumner: "div";
  email2: "div";
  mail: "div";
  text: "div";
  content12: "div";
  content13: "div";
  freeBox: "div";
  time: "div";
  icon7: "div";
  paymentCard: "div";
  content3: "div";
  _2024EwlInstallationstechnikGmbH: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicFooter__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    content: makeNodeComponent("content"),
    content2: makeNodeComponent("content2"),
    image2: makeNodeComponent("image2"),
    verwandelnSieIhrZuhauseInEineWohlfuhloase: makeNodeComponent(
      "verwandelnSieIhrZuhauseInEineWohlfuhloase"
    ),
    email: makeNodeComponent("email"),
    inputEmail: makeNodeComponent("inputEmail"),
    buttonNoIcon: makeNodeComponent("buttonNoIcon"),
    button: makeNodeComponent("button"),
    content4: makeNodeComponent("content4"),
    content5: makeNodeComponent("content5"),
    frame8120: makeNodeComponent("frame8120"),
    content6: makeNodeComponent("content6"),
    content7: makeNodeComponent("content7"),
    content8: makeNodeComponent("content8"),
    content9: makeNodeComponent("content9"),
    content10: makeNodeComponent("content10"),
    content11: makeNodeComponent("content11"),
    frame9664: makeNodeComponent("frame9664"),
    locations: makeNodeComponent("locations"),
    marker: makeNodeComponent("marker"),
    phoneNumner: makeNodeComponent("phoneNumner"),
    email2: makeNodeComponent("email2"),
    mail: makeNodeComponent("mail"),
    text: makeNodeComponent("text"),
    content12: makeNodeComponent("content12"),
    content13: makeNodeComponent("content13"),
    freeBox: makeNodeComponent("freeBox"),
    time: makeNodeComponent("time"),
    icon7: makeNodeComponent("icon7"),
    paymentCard: makeNodeComponent("paymentCard"),
    content3: makeNodeComponent("content3"),
    _2024EwlInstallationstechnikGmbH: makeNodeComponent(
      "_2024EwlInstallationstechnikGmbH"
    ),

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
